{
  "compilerOptions": {
    "target": "ESNext",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "experimentalDecorators": true,                   /* Enable experimental support for legacy experimental decorators. */
    "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */
    "module": "commonjs",                                /* Specify what module code is generated. */
    "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
    "paths": {
      "@configs/*": ["src/common/config/*"],
      "@enums/*": ["src/common/enums/*"]
    },                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
    "types": [
      "node",
      "reflect-metadata",
    ],                                      /* Specify type package names to be included without being referenced in a source file. */
    "resolveJsonModule": true,                        /* Enable importing .json files. */
    "allowJs": true,                                  /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
    "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
    "outDir": "./dist",                                   /* Specify an output folder for all emitted files. */
    "noEmitOnError": true,                            /* Disable emitting files if any type checking errors are reported. */
    "allowSyntheticDefaultImports": true,             /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "strictPropertyInitialization": false,             /* Check for class properties that are declared but not set in the constructor. */
    "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
    "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
  },
  "include": ["src/**/*", "Kernel/**/*", "tests/**/*.ts", "./index.ts", "./knexfile.ts"],
	"exclude": ["node_modules", "dist"]
  //"exclude": ["./dist", "**/*.test.*", "**/mocks/*", "**/tests/*"]
}